h1. remoteField

h2. 目的 {hidden}Purpose{hidden}

Creates a text field that sends its value to a remote link when it changes. By default the parameter name sent is called 'value', this can be changed by specifying a 'paramName' attribute.

h2. 使用例 {hidden}Examples{hidden}

Example controller for an application called "shop":

{code:java}
class BookController {

    def changeTitle() {
       def b = Book.get(params.id)
       b.title = params.value
       b.save()
    }
}
{code}

Example usages for this controller:

{code:xml}
<g:remoteField action="changeTitle" update="titleDiv"
               name="title" value="${book?.title}" />

<div id="titleDiv">I'm updated with the new title!</div>
{code}

h2. 詳細 {hidden}Description{hidden}

This tag creates an input field that fires an AJAX request when its value changes (typically when the user presses return inside the field). The exact Javascript used to fire off the AJAX request depends on which Javascript library is used. This tag also requires the use of either the <g:[javascript|tags]/> or <g:[setProvider|tags]/> tags. See the [AJAX section|guide:ajax] of the user guide to find out more.

属性 {hidden}Attributes{hidden}

* @name@ (required) - the name of the field
* @value@ (optional) - The initial value of the field
* @paramName@ (optional) - The name of the parameter to send to the server
* @action@ (optional) - the name of the action to use in the link; if not specified the default action will be linked
* @controller@ (optional) - the name of the controller to use in the link; if not specified the current controller will be linked
* @id@ (optional) - The id to use in the link
* @update@ (optional) - Either a Map containing the elements to update for 'success' or 'failure' states, or a string with the element id to update, in which case failure events would be ignored
* @before@ (optional) - The JavaScript function to call before the remote function call. A semi-colon is automatically added so you don't have to provide one yourself in this string.
* @after@ (optional) - The JavaScript function to call after the remote function call. A semi-colon is automatically added so you don't have to provide one yourself in this string.
* @asynchronous@ (optional) - Whether to do the call asynchronously (defaults to @true@)
* @method@ (optional) - The method to use the execute the call (defaults to POST)

イベント {hidden}Events{hidden}

* @onSuccess@ (optional) - The JavaScript function to call if successful
* @onFailure@ (optional) - The JavaScript function to call if the call fails
* @on_ERROR_CODE@ (optional) - The JavaScript function to call to handle the specified error code (eg on404="alert('not found!')")
* @onUninitialized@ (optional) - The JavaScript function to call if Ajax fails to initialise
* @onLoading@ (optional) - The JavaScript function to call when the remote function loads the response
* @onLoaded@ (optional) - The JavaScript function to call when the remote function completes loading the response
* @onComplete@ (optional) - The JavaScript function to call when the remote function completes, including any updates

h2. ソース {hidden}Source{hidden}

{source:tag=JavascriptTagLib.remoteField}
{source}
