h1. table

h2. 目的 {hidden}Purpose{hidden}

Customizes the name of the database table associated with the domain class

h2. 使用例 {hidden}Examples{hidden}

{code:java}
class Book {
    static mapping = {
        table "book_catalog"
    }
}
{code}

h2. 詳細 {hidden}Description{hidden}

{hidden}Usage: @table(string/map)@{hidden}
使用方法: {hidden}Usage:{hidden} @table(string/map)@

引数: {hidden}Arguments:{hidden}

* @name@ - The table name
* @schema@ (optional) - The table schema
* @catalog@ (optional) - The table catalog

By default the table that Grails maps a domain class is based on the class name. Grails will take a class name and convert Java style camel-case names into table names with underscores. So for example @ProductReview@ becomes @product_review@. You can override this with the @table@ method:

{code}
static mapping = {
    table "book_catalog"
}
{code}

You can also specify a schema and catalog:

{code}
static mapping = {
    table name: "book_catalog", schema: "dbo", catalog: "CRM"
}
{code}
